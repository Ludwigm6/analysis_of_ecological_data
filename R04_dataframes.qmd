# R04: Dataframes


> From a data science perspective, the most important class of objects is the data frame - @Chambers2020


* Dataframes combine multiple vector in a structured format
* Intuitive - most people have seen a spreadsheet before
* Each column is regarded as a vector
* Each vector can have a different data type


```{r, echo = FALSE, fig.cap = "data.frames are a named list of vectors"}
knitr::include_graphics("assets/r_dataframe.svg")
```


* Create one with `data.frame`
* The functions need the column name followed by the vector of values


```{r}
df = data.frame(plotID = seq(3),
                soil_ph = c(5.5, 5.4, 6.1),
                soil_temperature = c(10, 11, 12),
                forest_type = c("coniferous", "coniferous", "deciduous"))

df
```



## CSV Files

Dataframes can be loaded from and saved to `.csv` files.

* Comma Separated Values
* Caution: In Germany "," is used as the decimal point. You often find ";" as the delimiter in csvs.
* Caution: If you open csv files in Excel, things can get messy


```
Datum,Wassertemperatur,pH-Wert,Sauerstoffgehalt
2021-05-31 23:57,17.98,8.05,10.53
2021-06-01 00:09,17.66,8.04,9.64
2021-06-01 00:19,18.03,8.12,11.30
2021-06-01 00:27,18.08,8.14,11.32
2021-06-01 00:39,18.06,8.12,11.06
2021-06-01 00:49,18.01,8.10,10.91
```


* use the `read.csv` function
* make sure the `dec` and `sep` parameters of the function are properly set
* when in doubt look at the help page `?read.csv`


```{r}
data = read.csv(file = "data/2021-06_aasee.csv", dec = ".", sep = ",")


# show the first few rows of the df
head(data)

# show the last few rows of the df
tail(data)

# get a short summary of the structure
str(data)
```


