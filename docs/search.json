[
  {
    "objectID": "exercise/E03-more-dataframes.html#münsters-bezirke",
    "href": "exercise/E03-more-dataframes.html#münsters-bezirke",
    "title": "E03: Mehr Dataframes",
    "section": "Münsters Bezirke",
    "text": "Münsters Bezirke\n\nWelcher Bezirk Münsters ist am größten?\n\n\nbezirke$district[which.max(bezirke$area)]\n\n[1] \"Amelsbüren\"\n\n# oder:\nbezirke[bezirke$area == max(bezirke$area),]$district\n\n[1] \"Amelsbüren\"\n\n\n\nWie groß ist die Bezirksgruppe “Altstadt”?\n\n\nsum(bezirke[bezirke$district_group == \"Altstadt\",]$area)\n\n[1] 1194248\n\n# oder:\nsum(bezirke$area[which(bezirke$district_group == \"Altstadt\")])\n\n[1] 1194248\n\n\n\nZu welcher Bezirksgruppe gehört der Bezirk “Schloss”?\n\n\nbezirke[which(bezirke$district==\"Schloss\"),]$district_group\n\n[1] \"Innenstadtring\"\n\n# oder\nbezirke$district_group[which(bezirke$district==\"Schloss\")]\n\n[1] \"Innenstadtring\"\n\n\n\nAus Welchen Bezirken besteht die Bezirksgruppe “Münster-West”?\n\n\nmw = which(bezirke$district_group == \"Münster-West\")\nbezirke[mw,]$district\n\n[1] \"Albachten\"   \"Gievenbeck\"  \"Roxel\"       \"Mecklenbeck\" \"Nienberge\"  \n[6] \"Sentrup\"    \n\n# oder\nbezirke$district[bezirke$district_group == \"Münster-West\"]\n\n[1] \"Albachten\"   \"Gievenbeck\"  \"Roxel\"       \"Mecklenbeck\" \"Nienberge\"  \n[6] \"Sentrup\""
  },
  {
    "objectID": "exercise/E03-more-dataframes.html#münsters-bäume",
    "href": "exercise/E03-more-dataframes.html#münsters-bäume",
    "title": "E03: Mehr Dataframes",
    "section": "Münsters Bäume",
    "text": "Münsters Bäume\n\nWie viele Baumarten gibt es in Münster?\n\n\nv = trees$species\nlength(unique(v))\n\n[1] 67\n\n# oder\nlength(table(trees$species))\n\n[1] 67\n\n\n\nWie viele Buchen (species: Fagus) gibt es in Münster?\n\n\nsum(trees$species == \"Fagus\")\n\n[1] 420\n\n# oder:\nfagus = trees[trees$species == \"Fagus\",]\nnrow(fagus)\n\n[1] 420\n\nlength(fagus$species)\n\n[1] 420\n\n\n\nIn welchem Bezirk stehen die meisten Bäume?\n\n\nv1 = sort(table(trees$district), decreasing = TRUE)[1]\nv1 # Name mit Baumanzahl\n\nNienberge \n     2407 \n\nwhich.max(table(trees$district)) # Name mit Index\n\nNienberge \n       34 \n\n\n\nIn welchem Bezirk stehen die meisten Magnolien (species: Magnolia)?\n\n\nwhich.max(table(trees$district[trees$species == \"Magnolia\"]))\n\nBahnhof \n      2 \n\nmuenster_Magnolia &lt;- trees[trees$species== \"Magnolia\",]\ntable(muenster_Magnolia$district)\n\n\n      Aaseestadt          Bahnhof              Dom         Düesberg \n               1               25                1                8 \nGremmendorf-West        Herz-Jesu    Hiltrup-Mitte      Hiltrup-Ost \n               1                1                5                8 \n Kinderhaus-West    Mauritz-Mitte      Mecklenbeck      Schlachthof \n               4                7                2                6 \n         Schloss \n               7"
  },
  {
    "objectID": "exercise/E03-more-dataframes.html#und-noch-was-zum-knobeln",
    "href": "exercise/E03-more-dataframes.html#und-noch-was-zum-knobeln",
    "title": "E03: Mehr Dataframes",
    "section": "Und noch was zum Knobeln:",
    "text": "Und noch was zum Knobeln:\n\nErstelle eine Karte aller Bäume in den Bezirksgruppen “Altstadt” und “Innenstadtring”.\n\n\n# Welche districts sind in den districtgruppen \"Altstadt\" und \"Innnestadtring\"?\ninnermuenster = bezirke$district[bezirke$district_group == \"Altstadt\"| bezirke$district_group == \"Innenstadtring\"]\ninnermuenster\n\n [1] \"Bahnhof\"      \"Kreuz\"        \"Josef\"        \"Pluggendorf\"  \"Mauritz-West\"\n [6] \"Aegidii\"      \"Schloss\"      \"Dom\"          \"Martini\"      \"Hansaplatz\"  \n[11] \"Buddenturm\"   \"Neutor\"       \"Überwasser\"   \"Schlachthof\" \n\n# diesen Vektor benutzen um die Bäume zu filter:\nmuenster_trees_innermuenster = trees[trees$district %in% innermuenster,]\n\n# Dann X und Y plotten, asp = 1 verhindert verzerrung (aspect ratio), cex = 0.1 ist die Punktgrösse\nplot(muenster_trees_innermuenster$X, muenster_trees_innermuenster$Y,\n     asp = 1, cex = 0.1)"
  },
  {
    "objectID": "exercise/E04-tidyverse.html#münsters-bezirke",
    "href": "exercise/E04-tidyverse.html#münsters-bezirke",
    "title": "E04: Tidyverse, strings",
    "section": "Münsters Bezirke",
    "text": "Münsters Bezirke\n\nWie groß ist die Bezirksgruppe “Altstadt”?\n\n\nZu welcher Bezirksgruppe gehört der Bezirk “Schloss”?\n\n\nAus welchen Bezirken besteht die Bezirksgruppe “Münster-West”?\n\n\nErstelle eine Tabelle die für jede Bezirksgruppe den Mittelwert und die Standardabweichung der Fläche der jeweiligen Bezirke berechnet. Nutze dafür die Funktionen dplyr::group_by() und dplyr::summarise()"
  },
  {
    "objectID": "exercise/E04-tidyverse.html#münsters-bäume",
    "href": "exercise/E04-tidyverse.html#münsters-bäume",
    "title": "E04: Tidyverse, strings",
    "section": "Münsters Bäume",
    "text": "Münsters Bäume\n\nWie viele Baumarten gibt es in Münster?\n\n\nWie viele Buchen (species: Fagus) gibt es in Münster?\n\n\nErstelle eine Tabelle die für jeden Bezirk die Anzahl unterschiedlicher Baumarten angibt. Nutze dafür die Funktionen dplyr::group_by() und dplyr::summarise()"
  },
  {
    "objectID": "exercise/E04-tidyverse.html#strings",
    "href": "exercise/E04-tidyverse.html#strings",
    "title": "E04: Tidyverse, strings",
    "section": "Strings",
    "text": "Strings\nNutze für die folgenden Aufgaben Funktionen des stringr Pakets.\n\nWie viele Bezirke beginnen mit “H”?\n\n\nGib alle Bezirke aus die das Wort “Ost” enthalten.\n\n\nIn der Baumtabelle gibt es in der Spalte species sowohl Einträge mit “Metasequoia” als auch mit “Metasequoia glyptostroboides”. Ändere alle “Metasequoia glyptostroboides” zu “Metasequoia”."
  },
  {
    "objectID": "98-additional_resources.html#r-cheat-sheets",
    "href": "98-additional_resources.html#r-cheat-sheets",
    "title": "Additional Ressources",
    "section": "R cheat sheets",
    "text": "R cheat sheets\nThese are compact overview of R functions and how to use them.\nhttps://www.rstudio.com/resources/cheatsheets/\nUseful for the course are the following:\n\nBase R\nstringr\nlubridate\ndplyr\nggplot2"
  },
  {
    "objectID": "98-additional_resources.html#useful-keyboard-shortcuts",
    "href": "98-additional_resources.html#useful-keyboard-shortcuts",
    "title": "Additional Ressources",
    "section": "Useful Keyboard shortcuts",
    "text": "Useful Keyboard shortcuts\n\nCtrl + i: indent automatically\nCtrl + shift + c: comment / uncomment marked lines\nCtrl + s: save script\nCtrl + shift + m: insert pipe operator %&gt;%/|&gt;\nF1: open help page of marked function\nF2: open source code of marked function"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Chambers, John M. 2016. Extending R. The\nR Series. Boca Raton, Fla. London New York:\nCRC Press, Taylor & Francis Group.\n\n\nChambers, John, M. 2020. “S, R, and Data\nScience.” The R Journal 12 (1): 462. https://doi.org/10.32614/RJ-2020-028.\n\n\nSlater, Louise J., Guillaume Thirel, Shaun Harrigan, Olivier Delaigue,\nAlexander Hurley, Abdou Khouakhi, Ilaria Prosdocimi, Claudia Vitolo, and\nKatie Smith. 2019. “Using R in Hydrology: A Review of\nRecent Developments and Future Directions.” Hydrology and\nEarth System Sciences 23 (7): 2939–63. https://doi.org/10.5194/hess-23-2939-2019.\n\n\nTurner, W. 2014. “Sensing Biodiversity.” Science\n346 (6207): 301–2. https://doi.org/10.1126/science.1256014."
  },
  {
    "objectID": "R05_tidyverse.html#dplyr",
    "href": "R05_tidyverse.html#dplyr",
    "title": "R05: Tidyverse functions",
    "section": "dplyr",
    "text": "dplyr\n\nprovides functions for dataframe manipulation\ncan complement or replace base R functions\n\n\n\n\nhttps://biostat2.uni.lu/lectures/img/06/vaudor_dplyr_schema.png\n\n\n\nlibrary(dplyr)\naasee = read.csv(\"data/2021-06_aasee.csv\")\n\n# slice - gives back a slice of data - i.e. the specified rows\naasee = slice(aasee, seq(8))\n\n\n# select - selects columns\nselect(aasee, Wassertemperatur)\n\n  Wassertemperatur\n1            17.98\n2            17.66\n3            18.03\n4            18.08\n5            18.06\n6            18.01\n7            18.02\n8            18.06\n\n# filter - filters rows based on logical operators\nfilter(aasee, Wassertemperatur &lt; 18)\n\n             Datum Wassertemperatur pH.Wert Sauerstoffgehalt\n1 2021-05-31 23:57            17.98    8.05            10.53\n2 2021-06-01 00:09            17.66    8.04             9.64\n\n# mutate - mutates the data.frame by adding columns\nmutate(aasee, t_kelvin = Wassertemperatur + 273.15)\n\n             Datum Wassertemperatur pH.Wert Sauerstoffgehalt t_kelvin\n1 2021-05-31 23:57            17.98    8.05            10.53   291.13\n2 2021-06-01 00:09            17.66    8.04             9.64   290.81\n3 2021-06-01 00:19            18.03    8.12            11.30   291.18\n4 2021-06-01 00:27            18.08    8.14            11.32   291.23\n5 2021-06-01 00:39            18.06    8.12            11.06   291.21\n6 2021-06-01 00:49            18.01    8.10            10.91   291.16\n7 2021-06-01 00:59            18.02    8.10            10.96   291.17\n8 2021-06-01 01:08            18.06    8.10            10.83   291.21\n\n# summarise - summarises data\nsummarise(aasee, minimum_t = min(Wassertemperatur))\n\n  minimum_t\n1     17.66\n\n\nThe functions itself could all be realized with base R functions:\n\n# the same in base R\n\n# select\naasee$Wassertemperatur\n\n[1] 17.98 17.66 18.03 18.08 18.06 18.01 18.02 18.06\n\n# filter\naasee[,aasee$Wassertemperatur &lt; 18]\n\n             Datum Wassertemperatur\n1 2021-05-31 23:57            17.98\n2 2021-06-01 00:09            17.66\n3 2021-06-01 00:19            18.03\n4 2021-06-01 00:27            18.08\n5 2021-06-01 00:39            18.06\n6 2021-06-01 00:49            18.01\n7 2021-06-01 00:59            18.02\n8 2021-06-01 01:08            18.06\n\n# mutate\naasee$t_kelvin = aasee$Wassertemperatur + 273.15\n\n# summarise\nmin(aasee$Wassertemperatur)\n\n[1] 17.66\n\n\nThe strength of dplyr is the possibility to chain functions with %&gt;% or |&gt;.\n\naasee|&gt; \n    filter(Wassertemperatur &lt; 18) |&gt; \n    select(pH.Wert) |&gt;  \n    max()\n\n[1] 8.05\n\n\nWith base R functions this looks messy, because we have to use functions inside functions.\n\nmax(aasee$pH.Wert[aasee$Wassertemperatur &lt; 18])\n\n[1] 8.05"
  }
]