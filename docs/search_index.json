[["index.html", "Analysis of Ecological Data with R 1 Welcome 1.1 Target audience 1.2 Aims of this course 1.3 What this course is not 1.4 Course Outline 2022", " Analysis of Ecological Data with R Marvin Ludwig 1 Welcome Figure 1.1: Landscape Ecology with R 1.1 Target audience You want answers to questions (in landscape ecology)! Primarily ecologists but the methods and skills are useful in many fields. No R knowledge is required (or other programming skills) It is helpful if you know what a spreadsheet is Minimum amount of statistic needed (course explains all the necessary stuff) 1.2 Aims of this course Developing ideas, answering questions Defining steps how to solve a problem Translating these steps into R code Learning the R language “on the fly” Data handling. A lot of data handling. I believe a good understanding of data is one of the most important things in science and work. Learn statistics. Use statistics as a tool. developing good scripting and project management habits from the start (makes live so much easier) 1.3 What this course is not statistics as in mathematical equations \\[ \\left( {\\begin{array}{*{20}c} n \\\\ k \\\\ \\end{array}} \\right) = \\frac{{n!}}{{k!\\left( {n - k} \\right)!}} \\] \\[ \\sigma ^2 = \\mu _2 = \\sum {\\left( {x - \\mu _1 } \\right)^2 P\\left( x \\right)} \\] R as in computer science You probably won’t find out anything you didn’t already know about nature 1.4 Course Outline 2022 Table 1.1: Course Outline Date Content 07.04. Organization - Topic Overview - What is R? - What is ecological data? 14.04. Aasee water monitoring - data types in R - accessing data - subsetting 21.04. Aasee water monitoring - real world analysis 28.04. Database Concepts - Working with multiple datasets 05.05. Aasee water monitoring - the tidy approach 12.05. Biodiversity data 19.05. Biodiversity data (Vertretung) 26.05. —- Feiertag —- 02.06. Visualization 09.06. —- Pfingstferien —- 16.06. —- Feiertag —- 23.06. Visualization 30.06. Open Topics 07.07. Open Topics 14.07. Wrap up "],["ecological-data.html", "2 Ecological data 2.1 Plot surveys 2.2 Time Series 2.3 Species Lists 2.4 Geospatial Data 2.5 Want more?", " 2 Ecological data Take a few minutes to think about what kind of data you know or have used before? what kind of data would be interesting for you? Figure 2.1: Marburg Open Forest, 2019-05-13 Planetscope RGB Ask yourself how you could describe and quantify a landscape like the one in Fig. 2.1. 2.1 Plot surveys plots with ID and surveyed environmental information bread and butter of ecology Table 2.1: Field survery data on a plot level plotID soil_ph soil_temperature forest_type P1 5.5 10 coniferous P2 5.4 11 coniferous P3 6.1 12 deciduous 2.2 Time Series Figure 2.2: Visualization of time series data continuous measurements measurement interval flexible mainly climate, soil, remote sensing Table 2.2: Time series data: Aasee sensor measurements date temperature ph o2 2021-06-01 18.06 8.12 11.06 2021-06-01 18.08 8.10 10.62 2021-06-01 17.93 8.15 11.20 2021-06-01 17.78 8.19 11.92 2021-06-01 17.79 8.13 11.39 2.3 Species Lists mostly plot based monitoring of conservation sites biodiversity assessment Table 2.3: Species Lists: Occurence on a plot species n Digitalis purpurea 4 Galium odoratum 25 Fagus Sylvatica 20 … … What are the differences between the plot based survey example and the species list example? 2.4 Geospatial Data defined by explicit location on the earth surface information attached to coordinates Table 2.4: Geospatial Data: Tree locations tree_id easting northing species_code dbh geom r00430 477422.4 5631970 BUR 0.12 POINT (477422.4 5631970) r01106 477411.7 5631946 BUR 0.68 POINT (477411.7 5631946) b00818 477796.0 5632316 BUR 0.23 POINT (477796 5632316) r00170 477816.9 5632201 EIT 0.59 POINT (477816.9 5632201) r00334 477737.2 5632250 ERS 0.68 POINT (477737.2 5632250) 2.5 Want more? Turner (2014) : Sensing Biodiversity Animal movement data Lab / Field experiments Individuum based information (e.g. traits) Camera Traps Socio-Economic data (also useful for landscape ecology) … References "],["what-is-r.html", "3 What is R? 3.1 R Code 3.2 Why R? 3.3 Rstudio 3.4 TASK: R and Rstudio", " 3 What is R? Script Language Version 1.0 from 2000 (concept dates back to the 1974) Aim: Statistical Analysis Designed for data analysis and “interactive” use Download: r-project.org r-project.org What you see when you start R 3.1 R Code How R code looks like: data &lt;- c(12, 45, 65, 1, 3, 87) mean(data) data &lt;- data + 5 sort(data) How R code looks like with output: data &lt;- c(12, 45, 65, 1, 3, 87) mean(data) ## [1] 35.5 data &lt;- data + 5 sort(data) ## [1] 6 8 17 50 70 92 3.2 Why R? Easy to get into (although it might not feel that way at first) Designed for solving scientific problems Big community - Getting help is really easy. Open-source, active development The R package structure has been the key addition to the software - J. Chambers M. (2020) Expandable with packages provided by other R users Specialized analysis for specific fields Machine Learning Medicine Writing Books … Used in science, industry, healthcare, NGOs, … Slater et al. (2019) : Workflow with R packages 3.3 Rstudio Integrated Development Environment (IDE) Makes R “convenient” to use Text Editor + R Console Project Environments, Package Management, Help Pages, Plot Viewer, File Browser … 3.4 TASK: R and Rstudio Open R studio and get familiar with the interface. Create a new, empty R script. What is the difference between the script editor and the console? Copy the code below into the R script and run it line by line. Try to understand what each line does. a &lt;- 5 b &lt;- 10 a + b p &lt;- a*b v &lt;- c(3,12,6,9,23) v v / b mean(v) # sum(v) 3.4.1 Questions you might have Why does p &lt;- a*b not produce an output? What is c()? Why does # sum(v) not work? Everything that exists in R is an object. Everything that happens in R is a function call. - J. M. Chambers (2016) References "],["the-aasee-dataset.html", "4 The Aasee Dataset", " 4 The Aasee Dataset To learn the basics about data types, data handling and the fundamentals of R, we will work with a dataset from the Aasee in Muenster: Inform yourself real quick here about the origin of the dataset. You can download it here: https://github.com/od-ms/aasee-monitoring Here is an excerpt of the data: Table 4.1: First entries of the Aasee monitoring dataset Datum Wassertemperatur pH.Wert Sauerstoffgehalt 2021-05-31 23:57 17.98 8.05 10.53 2021-06-01 00:09 17.66 8.04 9.64 2021-06-01 00:19 18.03 8.12 11.30 2021-06-01 00:27 18.08 8.14 11.32 2021-06-01 00:39 18.06 8.12 11.06 2021-06-01 00:49 18.01 8.10 10.91 2021-06-01 00:59 18.02 8.10 10.96 2021-06-01 01:08 18.06 8.10 10.83 2021-06-01 01:19 18.08 8.10 10.82 2021-06-01 01:29 18.08 8.10 10.62 As a first intermediate goal we want to deal with the following task. We will learn all the necessary skills in R and a bit of statistics in the next lessons, but it is valuable to think about the task / question beforehand! Compare the water temperature of 2021 June 02 and June 21. What does this task actually mean? Reformulate it as a question Outline steps to answer the question "],["r-foundations.html", "5 R foundations 5.1 Variables 5.2 Values 5.3 Functions 5.4 Vectors 5.5 Subsetting", " 5 R foundations 5.1 Variables assign values to variables either with &lt;- or = variable on the left, assigned value on the right You decide how to name a variable. Use recognizable names! Don’t be lazy. Longer, descriptive names can help immensely. a &lt;- 5 b = 10 a_big_number = 500000 5.2 Values How is data represented in R? Types we need right now: numeric character (string / text) logical # numeric 1 68542 4.5 # character &quot;f&quot; &quot;Hi Mom!&quot; # logical TRUE F # nothing NA # there should be something, but it is missing NULL # truly nothing 5.3 Functions Everything you do in R is a function! Easily identified by function name followed by parenthesis (), e.g. print() for common functions there are shortcuts # Really everything you do in R is a function! `&lt;-`(a, 5) print(a) ## [1] 5 # both functions above have shortcuts: a &lt;- 5 a ## [1] 5 most functions need arguments input, options, parameters to specify what the function should do each function has a help page where you can read about arguments For example, the cos() function computes the cosine of a number. The help page specifies what the function expects as an input. You can access the help page with ?cos() or by searching for the function in the ‘Help’ tab in Rstudio (bottom right panel). # the cos function needs the argument x of type numeric cos(x = 0) ## [1] 1 # it throws an error otherwise cos(x = &quot;3.14&quot;) ## Error in cos(x = &quot;3.14&quot;): non-numeric argument to mathematical function # argument names can be neglected cos(1) ## [1] 0.5403023 5.4 Vectors most important data structure in R building block for more complicated structures created with the function c() think about a container where you can put in multiple things vectors are atomic - each entry has to be from the same value type each element has an index with which it can be accessed Figure 5.1: R vector model c(23, 1, 60, 21, 21) ## [1] 23 1 60 21 21 # vectors are atomic c(23, 1, 60.5, 21, 21) ## [1] 23.0 1.0 60.5 21.0 21.0 # to actually use a vector we have to assign it to a variable vec = c(23, 1, 60, 21, 21) 5.4.1 Vector Maths Figure 5.2: R vector addition most of the functions in R are “vectorised” i.e. functions are applied to all the elements in a vector vec1 = c(23, 1, 60, 21, 21, 5) vec1 + 6 ## [1] 29 7 66 27 27 11 vec2 = c(5, 1000, 5, 1000, 5, 1000) vec1 - vec2 ## [1] 18 -999 55 -979 16 -995 Figure 5.3: R vector multiplication, different length # be careful with vectors of different length! vec3 = c(1, 2, 1) vec1 * vec3 ## [1] 23 2 60 21 42 5 vec4 = c(1, 2, 1, 2) vec1 * vec4 ## [1] 23 2 60 42 21 10 5.4.2 TASK: Vectors and functions The vector below are the temperature values for 2021-06-02 from the Aasee dataset. Copy it into an empty are script. temperature &lt;- c(18.81,18.73,18.92,18.87,18.76,18.79,18.87,18.84,18.89,18.89, 18.93,18.95,18.92,18.97,19.00,18.99,19.00,19.00,18.99,19.00, 18.98,18.97,18.97,18.97,18.97,18.98,18.96,18.94,18.94,18.91, 18.90,18.89,18.87,18.85,18.85,18.84,18.83,18.81,18.81,18.81, 18.81,18.81,18.80,18.79,18.80,18.79,18.79,18.78,18.77,18.78, 18.79,18.79,18.79,18.79,18.79,18.79,18.80,18.79,18.81,18.80, 18.81,18.81,18.82,18.84,18.87,18.89,18.89,18.91,18.96,19.02, 19.11,19.15,18.95,18.92,18.84,18.85,18.96,18.92,18.95,18.95, 18.91,19.00,19.02,19.06,19.05,19.47,19.32,19.05,19.66,19.57, 19.23,19.42,19.36,19.66,19.79,19.81,19.99,21.10,21.94,22.52, 22.81,22.43,22.16,21.55,21.80,21.02,21.85,21.45,22.48,22.73, 22.61,22.83,20.85,20.68,19.76,19.81,19.74,19.58,19.35,19.40, 19.75,19.76,19.85,19.82,19.86,20.08,20.06,19.85,20.04,19.90, 19.96,20.12,19.94,20.20,20.17,20.31,20.17,20.37,20.36,20.13) To get familiar with the R syntax and vectors, do the following tasks: Convert the temperature from Celsius to Fahrenheit. Try out the following functions: length(), range(), seq() Come up with a reasonable questions that someone might have looking at this data. 5.5 Subsetting For many questions it is often required to access only parts of the data. This is one of the most common things you have to deal with in R. 5.5.1 Indexing To access single values of a vector, use square brackets []. # get the third value of the vector temperature[3] ## [1] 18.92 # accessing multiple elements at once temperature[1,2] ## Error in temperature[1, 2]: incorrect number of dimensions temperature[c(1,2)] ## [1] 18.81 18.73 Using the functions above, what is an easy way to access the first 10 elements of the vector? 5.5.2 Logical Operators Figure 5.4: R vector logical operation A more powerful way to subset a vector is by using logical operators. These functions usually return a boolean object (TRUE, FALSE) which can then be used to access certain values. 1 &gt; 2 ## [1] FALSE 1 &lt; 2 ## [1] TRUE 1 == 2 ## [1] FALSE max(temperature) &gt; 22 ## [1] TRUE temperature &gthot = temperature &gt; 20 temperature[hot] ## [1] 21.10 21.94 22.52 22.81 22.43 22.16 21.55 21.80 21.02 21.85 21.45 22.48 22.73 22.61 22.83 20.85 ## [17] 20.68 20.08 20.06 20.04 20.12 20.20 20.17 20.31 20.17 20.37 20.36 20.13 "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
